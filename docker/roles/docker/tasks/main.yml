- name: yum install docker
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - docker
    - python2-pip

- name: set proxy to docker
  lineinfile:
    path: /lib/systemd/system/docker.service
    insertbefore: ".*ExecStart.*"
    line: "Environment=\"http_proxy={{ proxy_server }}\""
  when: use_proxy == "y"

- name: unset proxy to docker
  lineinfile:
    path: /lib/systemd/system/docker.service
    state: absent
    regexp: "Environment=\'http_proxy=.*"
  when: use_proxy == "n"

- name: set no_proxy to docker
  lineinfile:
    path: /lib/systemd/system/docker.service
    insertbefore: ".*ExecStart.*"
    line: "Environment=\"no_proxy={{ no_proxy }}\""
  when: use_no_proxy == "y"

- name: unset no_proxy to docker
  lineinfile:
    path: /lib/systemd/system/docker.service
    state: absent
    regexp: "Environment=\'no_proxy=.*"
  when: use_no_proxy == "n"

- name: systemd demon reload
  shell: systemctl daemon-reload

- name: restart docker
  service:
    name: docker
    state: restarted 
    enabled: yes

- name: create directory for python modules
  file:
    path: "{{ pydir }}" 
    state: directory

- name: get PATH
  shell: echo $PATH
  register: path

- name: get PYTHONPATH
  shell: echo $PYTHONPATH
  register: pythonpath

- name: install docker-ps(python module)
  pip:
    name: docker-ps
    extra_args: "--prefix {{ pydir }}"
    state: latest
  environment:
    PYTHONPATH: "{{ pypath }}:{{ pythonpath.stdout }}"
    PATH: "{{ pydir }}/bin:{{ path.stdout }}"

- name: create a network with options
  docker_network:
    name: "{{ network_name }}"
    ipam_options:
      subnet: "{{ subnet }}"
      gateway: "{{ gateway }}"
      iprange: "{{ iprange }}"
  environment:
    PYTHONPATH: "{{ pypath }}:{{ pythonpath.stdout }}"
    PATH: "{{ pydir }}/bin:{{ path.stdout }}"
